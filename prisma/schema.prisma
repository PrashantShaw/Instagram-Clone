// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  username   String  @unique
  email      String  @unique // Add email for better user identification
  password   String
  firstName  String?
  lastName   String?
  bio        String? // Optional: Add bio for user profile
  profilePic String? // Optional: Profile picture URL

  posts    Post[]
  likes    Like[] // Add this relation to track user's likes
  comments Comment[] // Add this relation to track user's comments
}

model Post {
  id        Int       @id @default(autoincrement())
  imagePath String
  content   String?
  status    String    @default("active") // Optional: Add status for soft deletes/archived posts
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
  comments  Comment[]
  creatorId Int
  creator   User      @relation(fields: [creatorId], references: [id], onDelete: Cascade)
}

model Like {
  id     Int @id @default(autoincrement())
  userId Int
  postId Int

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, postId]) // Ensure user can't like the same post multiple times
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
